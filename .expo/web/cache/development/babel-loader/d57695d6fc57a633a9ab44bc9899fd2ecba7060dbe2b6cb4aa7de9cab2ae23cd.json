{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useUser, UserProvider } from \"../UserContext\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { useNavigation } from '@react-navigation/native';\nimport firebaseService from \"../Database/firebaseService\";\nimport { getDatabase, ref, get, remove } from 'firebase/database';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RS_Check = function RS_Check() {\n  var _ref4;\n  var _useUser = useUser(),\n    userId = _useUser.userId;\n  var navigation = useNavigation();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    reservationData = _useState2[0],\n    setReservationData = _useState2[1];\n  useEffect(function () {\n    if (userId) {\n      var _ref;\n      var fetchReservationData = function fetchReservationData() {\n        return (_ref = _ref || _asyncToGenerator(function* () {\n          try {\n            var db = getDatabase(firebaseService);\n            var snapshot = yield get(ref(db, `reservations/RSData/${userId}`));\n            var data = snapshot.val();\n            if (data) {\n              var reservations = Object.entries(data).map(function (_ref2) {\n                var _ref3 = _slicedToArray(_ref2, 2),\n                  location = _ref3[0],\n                  reservation = _ref3[1];\n                return _objectSpread({\n                  location: location\n                }, reservation);\n              });\n              setReservationData(reservations);\n            } else {\n              setReservationData([]);\n            }\n          } catch (error) {\n            console.error(\"Error fetching reservation data:\", error);\n          }\n        })).apply(this, arguments);\n      };\n      fetchReservationData();\n    }\n  }, [userId]);\n  var handleReservationChange = function handleReservationChange(index) {\n    var selectedReservation = reservationData[index];\n    switch (selectedReservation.location) {\n      case 'FootballCenter':\n        navigation.navigate('FootballCenter');\n        break;\n      case 'Ground':\n        navigation.navigate('Ground');\n        break;\n      case 'SportsCenter':\n        navigation.navigate('SportsCenter');\n        break;\n      default:\n        break;\n    }\n  };\n  var handleReservationCancel = function handleReservationCancel(_x) {\n    return (_ref4 = _ref4 || _asyncToGenerator(function* (index) {\n      try {\n        var db = getDatabase(firebaseService);\n        var reservationToRemove = reservationData[index];\n        var formattedDate = reservationToRemove.Date;\n        var location = reservationToRemove.location;\n        var reservationRef = ref(db, `reservations/${location}/${formattedDate}`);\n        var RSDataRef = ref(db, `reservations/RSData/${userId}/${reservationToRemove.location}`);\n        yield remove(reservationRef);\n        yield remove(RSDataRef);\n        var updatedReservations = _toConsumableArray(reservationData);\n        updatedReservations.splice(index, 1);\n        setReservationData(updatedReservations);\n        Alert.alert('알림', '예약이 성공적으로 취소되었습니다!');\n      } catch (error) {\n        console.error(\"Error canceling reservation:\", error);\n        Alert.alert('알림', '예약 취소 중 오류가 발생했습니다. 다시 시도해주세요.');\n      }\n    })).apply(this, arguments);\n  };\n  return _jsxs(UserProvider, {\n    children: [_jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(View, {\n          children: _jsx(Icon, {\n            name: \"ios-arrow-back\",\n            size: 100\n          })\n        })\n      })\n    }), _jsxs(View, {\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"\\uAD6D\\uB9BD \\uAC15\\uB989\\uC6D0\\uC8FC\\uB300\\uD559\\uAD50\"\n        }), _jsx(Text, {\n          children: \"GANGNEUNG-WONJU NATIONAL UNIVERSITY\"\n        })]\n      }), _jsx(View, {\n        children: _jsx(View, {\n          children: userId && _jsx(Text, {\n            children: `${userId}님의 예약내역`\n          })\n        })\n      }), reservationData && reservationData.map(function (userData, index) {\n        return _jsx(View, {\n          children: userData && _jsxs(View, {\n            style: {\n              padding: 20,\n              backgroundColor: 'lightgray',\n              margin: 10\n            },\n            children: [_jsxs(Text, {\n              children: [\"No.\", index + 1]\n            }), _jsx(Text, {\n              children: `장소: ${userData.location}`\n            }), _jsx(Text, {\n              children: `일정: ${userData.Date} ${userData.Time}`\n            }), _jsxs(View, {\n              style: {\n                flexDirection: 'row'\n              },\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return handleReservationChange(index);\n                },\n                children: _jsx(View, {\n                  style: {\n                    padding: 5,\n                    backgroundColor: 'lightblue'\n                  },\n                  children: _jsx(Text, {\n                    children: \"\\uC608\\uC57D \\uBCC0\\uACBD\"\n                  })\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return handleReservationCancel(index);\n                },\n                children: _jsx(View, {\n                  style: {\n                    padding: 5,\n                    backgroundColor: 'lightgreen'\n                  },\n                  children: _jsx(Text, {\n                    children: \"\\uC608\\uC57D \\uCDE8\\uC18C\"\n                  })\n                })\n              })]\n            })]\n          })\n        }, index);\n      })]\n    })]\n  });\n};\nexport default RS_Check;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Alert","useUser","UserProvider","Icon","useNavigation","firebaseService","getDatabase","ref","get","remove","jsx","_jsx","jsxs","_jsxs","RS_Check","_ref4","_useUser","userId","navigation","_useState","_useState2","_slicedToArray","reservationData","setReservationData","_ref","fetchReservationData","_asyncToGenerator","db","snapshot","data","val","reservations","Object","entries","map","_ref2","_ref3","location","reservation","_objectSpread","error","console","apply","arguments","handleReservationChange","index","selectedReservation","navigate","handleReservationCancel","_x","reservationToRemove","formattedDate","Date","reservationRef","RSDataRef","updatedReservations","_toConsumableArray","splice","alert","children","onPress","goBack","name","size","userData","style","padding","backgroundColor","margin","Time","flexDirection"],"sources":["C:/Users/KimTW/OneDrive/바탕 화면/Jo-main/Reservation_mate/RS_Check/RS_Check.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, Alert } from 'react-native';\nimport { useUser, UserProvider } from '../UserContext';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { useNavigation } from '@react-navigation/native';\nimport firebaseService from '../Database/firebaseService';\nimport { getDatabase, ref, get, remove } from 'firebase/database';\n\nconst RS_Check = () => {\n  const { userId } = useUser();\n  const navigation = useNavigation();\n  const [reservationData, setReservationData] = useState(null);\n\n  useEffect(() => {\n    if (userId) {\n      const fetchReservationData = async () => {\n        try {\n          const db = getDatabase(firebaseService);\n          const snapshot = await get(ref(db, `reservations/RSData/${userId}`));\n          const data = snapshot.val();\n          if (data) {\n            const reservations = Object.entries(data).map(([location, reservation]) => ({\n              location,\n              ...reservation,\n            }));\n            setReservationData(reservations);\n          } else {\n            setReservationData([]);\n          }\n        } catch (error) {\n          console.error(\"Error fetching reservation data:\", error);\n        }\n      };\n\n      fetchReservationData();\n    }\n  }, [userId]);\n\n  const handleReservationChange = (index) => {\n    // reservationData 배열에서 해당 인덱스의 예약 데이터를 가져옵니다.\n    const selectedReservation = reservationData[index];\n  \n    // 선택된 예약의 위치(location)에 따라 적절한 네비게이션 스크린으로 이동합니다.\n    switch (selectedReservation.location) {\n      case 'FootballCenter':\n        navigation.navigate('FootballCenter');\n        break;\n      case 'Ground':\n        navigation.navigate('Ground');\n        break;\n      case 'SportsCenter':\n        navigation.navigate('SportsCenter');\n        break;\n      default:\n        break;\n    }\n  };\n  \n\n  const handleReservationCancel = async (index) => {\n    try {\n      const db = getDatabase(firebaseService);\n      const reservationToRemove = reservationData[index];\n  \n      // 'Date' 속성을 통해 삭제할 예약의 날짜를 확인합니다.\n      const formattedDate = reservationToRemove.Date;\n      const location = reservationToRemove.location;\n\n      // 예약 데이터베이스의 위치를 참조합니다.\n      const reservationRef = ref(db, `reservations/${location}/${formattedDate}`);\n      const RSDataRef = ref(db, `reservations/RSData/${userId}/${reservationToRemove.location}`);\n  \n      // 예약을 삭제합니다.\n      await remove(reservationRef);\n      await remove(RSDataRef);\n  \n      // 예약 데이터 상태를 업데이트하여 UI를 갱신합니다.\n      const updatedReservations = [...reservationData];\n      updatedReservations.splice(index, 1);\n      setReservationData(updatedReservations);\n  \n      Alert.alert('알림', '예약이 성공적으로 취소되었습니다!');\n    } catch (error) {\n      console.error(\"Error canceling reservation:\", error);\n      Alert.alert('알림', '예약 취소 중 오류가 발생했습니다. 다시 시도해주세요.');\n    }\n  };\n  \n  return (\n    <UserProvider>\n      <View>\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <View>\n            <Icon name=\"ios-arrow-back\" size={100}/>\n          </View>\n        </TouchableOpacity>\n      </View>\n      <View>\n        <View>\n          <Text>국립 강릉원주대학교</Text>\n          <Text>GANGNEUNG-WONJU NATIONAL UNIVERSITY</Text>\n        </View>\n        <View>\n          <View>{userId && <Text>{`${userId}님의 예약내역`}</Text>}</View>\n        </View>\n        {reservationData &&\n          reservationData.map((userData, index) => (\n            <View key={index}>\n              {userData && (\n                <View style={{ padding: 20, backgroundColor: 'lightgray', margin: 10 }}>\n                  <Text>No.{index + 1}</Text>\n                  <Text>{`장소: ${userData.location}`}</Text>\n                  <Text>{`일정: ${userData.Date} ${userData.Time}`}</Text>\n                  <View style={{ flexDirection: 'row' }}>\n                    <TouchableOpacity onPress={() => handleReservationChange(index)}>\n                      <View style={{ padding: 5, backgroundColor: 'lightblue' }}>\n                        <Text>예약 변경</Text>\n                      </View>\n                    </TouchableOpacity>\n                    <TouchableOpacity onPress={() => handleReservationCancel(index)}>\n                      <View style={{ padding: 5, backgroundColor: 'lightgreen' }}>\n                        <Text>예약 취소</Text>\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              )}\n            </View>\n          ))}\n      </View>\n    </UserProvider>\n  );\n};\n\nexport default RS_Check;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
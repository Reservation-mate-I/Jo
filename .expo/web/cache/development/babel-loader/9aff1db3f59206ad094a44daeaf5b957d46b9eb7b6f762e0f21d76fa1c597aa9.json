{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar ETimePicker = function ETimePicker(_ref) {\n  var _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    onClose = _ref.onClose,\n    onSelectTime = _ref.onSelectTime;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    endTime = _useState2[0],\n    setEndTime = _useState2[1];\n  var times = Array.from({\n    length: 14\n  }, function (_, i) {\n    var hour = 9 + i;\n    return `${hour < 10 ? `0${hour}` : hour}:00`;\n  });\n  var handleTimeSelection = function handleTimeSelection(selectedTime) {\n    setEndTime(selectedTime);\n    onSelectTime(selectedTime);\n    onClose();\n  };\n  return _jsx(Modal, {\n    transparent: true,\n    visible: visible,\n    onRequestClose: onClose,\n    children: _jsxs(View, {\n      style: styles.modalContainer,\n      children: [_jsx(View, {\n        style: styles.overlay\n      }), _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          style: styles.modalTitle,\n          children: \"\\uC885\\uB8CC \\uC2DC\\uAC04 \\uC120\\uD0DD\"\n        }), _jsx(ScrollView, {\n          style: styles.scrollView,\n          children: times.map(function (time, index) {\n            return _jsx(TouchableOpacity, {\n              style: styles.timeSlot,\n              onPress: function onPress() {\n                return handleTimeSelection(time);\n              },\n              children: _jsx(Text, {\n                style: styles.timeSlotText,\n                children: time\n              })\n            }, index);\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.confirmButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: styles.confirmButtonText,\n            children: \"\\uCDE8\\uC18C\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 20,\n    width: windowWidth * 0.8,\n    maxHeight: windowHeight * 0.5,\n    overflow: 'hidden'\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  scrollView: {\n    maxHeight: '70%'\n  },\n  timeSlot: {\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: 'lightgray'\n  },\n  timeSlotText: {\n    fontSize: 16\n  },\n  confirmButton: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10\n  },\n  confirmButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});\nexport default ETimePicker;","map":{"version":3,"names":["React","useState","Modal","View","Text","TouchableOpacity","StyleSheet","ScrollView","Dimensions","jsx","_jsx","jsxs","_jsxs","windowWidth","get","width","windowHeight","height","ETimePicker","_ref","_ref$visible","visible","onClose","onSelectTime","_useState","_useState2","_slicedToArray","endTime","setEndTime","times","Array","from","length","_","i","hour","handleTimeSelection","selectedTime","transparent","onRequestClose","children","style","styles","modalContainer","overlay","modalContent","modalTitle","scrollView","map","time","index","timeSlot","onPress","timeSlotText","confirmButton","confirmButtonText","create","flex","justifyContent","alignItems","backgroundColor","padding","borderRadius","maxHeight","overflow","fontSize","fontWeight","marginBottom","textAlign","borderBottomWidth","borderBottomColor","marginTop","color"],"sources":["C:/Users/KimTW/OneDrive/바탕 화면/Jo-main/Reservation_mate/Gym/DandT/Time/ETimePicker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Modal, View, Text, TouchableOpacity, StyleSheet, ScrollView, Dimensions } from 'react-native';\n\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst ETimePicker = ({ visible = true, onClose, onSelectTime }) => {\n    const [endTime, setEndTime] = useState(null);\n  \n    const times = Array.from({ length: 14 }, (_, i) => {\n      const hour = 9 + i;\n      return `${hour < 10 ? `0${hour}` : hour}:00`;\n    });\n  \n    const handleTimeSelection = (selectedTime) => {\n      setEndTime(selectedTime);\n      onSelectTime(selectedTime);\n      onClose();\n    };\n  \n    return (\n      <Modal transparent visible={visible} onRequestClose={onClose}>\n        <View style={styles.modalContainer}>\n          <View style={styles.overlay} />\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>종료 시간 선택</Text>\n            <ScrollView style={styles.scrollView}>\n              {times.map((time, index) => (\n                <TouchableOpacity\n                  key={index}\n                  style={styles.timeSlot}\n                  onPress={() => handleTimeSelection(time)}\n                >\n                  <Text style={styles.timeSlotText}>{time}</Text>\n                </TouchableOpacity>\n              ))}\n            </ScrollView>\n            <TouchableOpacity style={styles.confirmButton} onPress={onClose}>\n              <Text style={styles.confirmButtonText}>취소</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    );\n  };\n  \n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 20,\n    width: windowWidth * 0.8,\n    maxHeight: windowHeight * 0.5,\n    overflow: 'hidden',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  scrollView: {\n    maxHeight: '70%',\n  },\n  timeSlot: {\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: 'lightgray',\n  },\n  timeSlotText: {\n    fontSize: 16,\n  },\n  confirmButton: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  confirmButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n});\n\nexport default ETimePicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, createContext, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar LostItemContext = createContext();\nfunction AddItemScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    itemType = _useState2[0],\n    setItemType = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    location = _useState4[0],\n    setLocation = _useState4[1];\n  var _useContext = useContext(LostItemContext),\n    addItem = _useContext.addItem;\n  var handleAddItem = function handleAddItem() {\n    if (itemType && location) {\n      addItem({\n        itemType: itemType,\n        location: location\n      });\n      navigation.goBack();\n    }\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"\\uBD84\\uC2E4\\uBB3C \\uB4F1\\uB85D \\uD654\\uBA74\"\n    }), _jsx(TextInput, {\n      placeholder: \"\\uBD84\\uC2E4\\uBB3C\\uC758 \\uC885\\uB958\",\n      value: itemType,\n      onChangeText: function onChangeText(text) {\n        return setItemType(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"\\uC2B5\\uB4DD \\uC7A5\\uC18C\",\n      value: location,\n      onChangeText: function onChangeText(text) {\n        return setLocation(text);\n      }\n    }), _jsx(Button, {\n      title: \"\\uB4F1\\uB85D\",\n      onPress: handleAddItem\n    })]\n  });\n}\nfunction LostmainScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    items = _useState6[0],\n    setItems = _useState6[1];\n  var addItem = function addItem(item) {\n    setItems([].concat(_toConsumableArray(items), [item]));\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"\\uBD84\\uC2E4\\uBB3C \\uAD00\\uB9AC\"\n    }), _jsx(Button, {\n      title: \"\\uB4F1\\uB85D\",\n      onPress: function onPress() {\n        return navigation.navigate('AddItem');\n      }\n    }), _jsx(Text, {\n      children: \"\\uB4F1\\uB85D\\uB41C \\uBB3C\\uD488:\"\n    }), items.map(function (item, index) {\n      return _jsxs(Text, {\n        children: [item.itemType, \" / \", item.location]\n      }, index);\n    })]\n  });\n}\nfunction Lostmain() {\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    items = _useState8[0],\n    setItems = _useState8[1];\n  var addItem = function addItem(item) {\n    setItems([].concat(_toConsumableArray(items), [item]));\n  };\n  return _jsx(LostItemContext.Provider, {\n    value: {\n      addItem: addItem\n    },\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: LostmainScreen,\n        options: {\n          title: '분실물 관리'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AddItem\",\n        component: AddItemScreen,\n        options: {\n          title: '분실물 등록'\n        }\n      })]\n    })\n  });\n}\nexport default Lostmain;","map":{"version":3,"names":["React","useState","createContext","useContext","View","Text","TextInput","Button","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","LostItemContext","AddItemScreen","_ref","navigation","_useState","_useState2","_slicedToArray","itemType","setItemType","_useState3","_useState4","location","setLocation","_useContext","addItem","handleAddItem","goBack","children","placeholder","value","onChangeText","text","title","onPress","LostmainScreen","_ref2","_useState5","_useState6","items","setItems","item","concat","_toConsumableArray","navigate","map","index","Lostmain","_useState7","_useState8","Provider","Navigator","initialRouteName","Screen","name","component","options"],"sources":["C:/Users/ops00/OneDrive/문서/GitHub/Mobile_Programming_01/Moblie__Programming_01-1/Lost/Lostmain.js"],"sourcesContent":["import React, { useState, createContext, useContext } from 'react';\r\nimport { View, Text, TextInput, Button } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst LostItemContext = createContext();\r\n\r\nfunction AddItemScreen({ navigation }) {\r\n  const [itemType, setItemType] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const { addItem } = useContext(LostItemContext);\r\n\r\n  const handleAddItem = () => {\r\n    if (itemType && location) {\r\n      addItem({ itemType, location });\r\n      navigation.goBack();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>분실물 등록 화면</Text>\r\n      <TextInput\r\n        placeholder=\"분실물의 종류\"\r\n        value={itemType}\r\n        onChangeText={(text) => setItemType(text)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"습득 장소\"\r\n        value={location}\r\n        onChangeText={(text) => setLocation(text)}\r\n      />\r\n      <Button title=\"등록\" onPress={handleAddItem} />\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction LostmainScreen({ navigation }) {\r\n  const [items, setItems] = useState([]);\r\n\r\n  const addItem = (item) => {\r\n    setItems([...items, item]);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>분실물 관리</Text>\r\n      <Button title=\"등록\" onPress={() => navigation.navigate('AddItem')} />\r\n      <Text>등록된 물품:</Text>\r\n      {items.map((item, index) => (\r\n        <Text key={index}>\r\n          {item.itemType} / {item.location}\r\n        </Text>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Lostmain() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  const addItem = (item) => {\r\n    setItems([...items, item]);\r\n  };\r\n\r\n  return (\r\n    <LostItemContext.Provider value={{ addItem }}>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        <Stack.Screen \r\n          name=\"Home\" \r\n          component={LostmainScreen} \r\n          options={{ title: '분실물 관리' }} \r\n        />\r\n        <Stack.Screen \r\n          name=\"AddItem\" \r\n          component={AddItemScreen} \r\n          options={{ title: '분실물 등록' }} \r\n        />\r\n      </Stack.Navigator>\r\n    </LostItemContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Lostmain;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}